// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InstallmentSelector should match snapshot 1`] = `
<View
  style={
    {
      "padding": 10,
    }
  }
>
  <Text
    style={
      {
        "fontSize": 16,
      }
    }
  >
    Parcelas
  </Text>
  <View
    style={
      {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <View
        testID="icon-remove"
      />
    </View>
    <TextInput
      keyboardType="number-pad"
      maxLength={3}
      onBlur={[MockFunction]}
      onChangeText={[MockFunction]}
      style={
        {
          "borderWidth": 1,
          "fontSize": 18,
          "textAlign": "center",
        }
      }
      textAlign="center"
      value="12"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <View
        testID="icon-add"
      />
    </View>
  </View>
  <View
    style={
      {
        "marginTop": 5,
      }
    }
  >
    <Text
      style={
        {
          "color": "#666666",
          "fontSize": 12,
        }
      }
    >
      Mín: 
      6
       • Máx: 
      60
    </Text>
  </View>
</View>
`;
